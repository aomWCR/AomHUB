local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/JRL-lav/Scripts/main/U"))()
local Window = Library:CreateWindow("Critical Legends")

-- // Vars \\ --
local Settings = {}
local TweenService = game:GetService("TweenService")
function Tween(obj,props,time,easing,direction,repeats,backwards)
	local info = TweenInfo.new(time or .1, easing or Enum.EasingStyle.Quad, direction or Enum.EasingDirection.Out, repeats or 0, backwards or false)
	local tween = TweenService:Create(obj, info, props)
	tween:Play()
end
-- // Main \\ --
local main = Window:AddFolder("Main")
local area_list = {}
for i,v in pairs(workspace.Enemies:GetChildren()) do
	if v:IsA("Folder") and not table.find(area_list, v.Name) then
		table.insert(area_list, v.Name)
	end
end

main:AddList({
	text = "Select Area",
	values = area_list, 
	callback = function(v)
		Settings["ChosenArea"] = v
	end
})

main:AddToggle({
	text = "AutoFarm",
	state = false,
	callback = function(v)
		Settings["AutoFarm"] = v
	end
})

main:AddToggle({
	text = "GodMode",
	state = false,
	callback = function(v)
		Settings["GodeMode"] = v
	end
})

main:AddToggle({
	text = "AutoChest",
	state = false,
	callback = function(v)
		Settings["AutoChest"] = v
	end
})

local gm 
gm = hookmetamethod(game, "__namecall", function(self, ...)
	local method = getnamecallmethod()
	local args = {...}

	if method == "FireServer" and tostring(self) == "Damage" and args[1] == game.Players.LocalPlayer.Character and Settings.GodeMode then 
		return nil 
	end

	return gm(self, ...)
end)

local function getMob()
	local dist, mob = math.huge
	for i,v in pairs(workspace.Enemies[Settings.ChosenArea]:GetChildren()) do
		if v:IsA("Model") and v.InCombat.Value == false and game.Players.LocalPlayer.Character.InCombat.Value == false then 
			local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v:FindFirstChild("EnemyLocation").Position).magnitude
			if mag < dist then 
				dist = mag 
				mob = v 
			end
		end
	end
	return mob
end

spawn(function()
	while wait() do 
		if Settings.AutoFarm then 
			pcall(function()
				if game.Players.LocalPlayer.Character.InCombat.Value == false then
					if getMob():FindFirstChildWhichIsA("Model") == nil then 
						local client = game.Players.LocalPlayer
						Tween(client.Character.HumanoidRootPart,{CFrame=workspace.Enemies[Settings.ChosenArea]:FindFirstChildWhichIsA("Model").EnemyLocation.CFrame},.075,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)
					else
						local client = game.Players.LocalPlayer
						Tween(client.Character.HumanoidRootPart,{CFrame=getMob():GetModelCFrame()},.075,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)
					end
				else
					for i,v in pairs(workspace.CombatFolder:GetChildren()) do
						if v:IsA("Folder") and v.Name == game.Players.LocalPlayer.Name then 
							for _,ssc in pairs(v:GetChildren()) do
								if(ssc:IsA("Model"))then
									local client = game.Players.LocalPlayer
									Tween(client.Character.HumanoidRootPart,{CFrame=ssc.PrimaryPart.CFrame},.075,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)
								end
							end
						end
					end
				end
			end)
		end
	end
end)

spawn(function()
	while wait() do
		if Settings.AutoChest then 
			pcall(function()
				for i,v in pairs(workspace.Chests:GetChildren()) do
					if v:IsA("Model") and not v:FindFirstChild("Open") then 
						firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Giver, 0)
						firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Giver, 1)
					end
				end
			end)
		end
	end
end)

-- // Teleports \\ -- 
local tele = Window:AddFolder("Teleports")
local area_table = {}
for i,v in pairs(workspace.WorldMap:GetChildren()) do
	if v:IsA("Model") and not table.find(area_table, v.Name) then 
		table.insert(area_table, v.Name)
	end
end

tele:AddList({
	text = "Select Area",
	values = area_table,
	callback = function(v)
		Settings["ChosenArea"] = v
	end
})

tele:AddButton({
	text = "Teleport",
	callback = function()
		pcall(function()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.WorldMap[Settings.ChosenArea]:GetModelCFrame()
		end)
	end
})
-- // Updated \\ --  imsad
local updated = Window:AddFolder("Updated")
updated:AddButton({text = "LanezHub#2506", callback = function() setclipboard("LanezHub#2506") end})
-- // Credits \\ -- 
local cred = Window:AddFolder("Credits")
cred:AddButton({text = "LeadMarker#1219", callback = function() setclipboard("LeadMarker#1219") end})
cred:AddButton({text = "Discord", callback = function() setclipboard("discord.gg/8Cj5abGrNv") end})
-- // Init \\ -- 
Library:Init()
